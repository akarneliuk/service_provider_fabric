---
- name: COLLECT OC NETWORK INSTANCES CONFIG AND STATE
  netconf_get:
      filter: <network-instances xmlns="http://openconfig.net/yang/network-instance"/>
      display: json
  register: oc_ni
  tags:
      - oc-netinst

- name: SAVE OC NETWORK INSTANCES CONFIG AND STATE
  copy:
      content: "{{ oc_ni.output.data | to_nice_json }}"
      dest: output/oc-netinst-{{ inventory_hostname }}.json
  tags:
      - oc-netinst 

- name: COLLECT OC INTERFACES CONFIG AND STATE
  netconf_get:
      filter: <interfaces xmlns="http://openconfig.net/yang/interfaces"/>
      display: json
  register: oc_if
  tags:
      - oc-if

- name: SAVE OC NETWORK INSTANCES CONFIG AND STATE
  copy:
      content: "{{ oc_if.output.data | to_nice_json }}"
      dest: output/oc-if-{{ inventory_hostname }}.json
  tags:
      - oc-if

- name: COLLECT OC LLDP CONFIG AND STATE
  netconf_get:
      filter: <lldp xmlns="http://openconfig.net/yang/lldp"/>
      display: json
  register: oc_lldp
  tags:
      - oc-lldp

- name: SAVE OC LLDP CONFIG AND STATE
  copy:
      content: "{{ oc_lldp.output.data | to_nice_json }}"
      dest: output/oc-lldp-{{ inventory_hostname }}.json
  tags:
      - oc-lldp

- name: COLLECT OC ROUTING POLICY CONFIG AND STATE
  netconf_get:
      filter: <routing-policy xmlns="http://openconfig.net/yang/routing-policy"/>
      display: json
  register: oc_rpol
  tags:
      - oc-rpol

- name: SAVE OC ROUTING POLICY CONFIG AND STATE
  copy:
      content: "{{ oc_rpol.output.data | to_nice_json }}"
      dest: output/oc-rpol-{{ inventory_hostname }}.json
  tags:
      - oc-rpol


- name: TEMP // COLLECT CISCO BGP CONFIG AND STATE
  netconf_get:
      filter: <bgp xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-bgp-cfg"/>
      display: json
  register: bgp
  tags:
      - cisco-bgp

- name: TEMP // SAVE CISCO BGP CONFIG AND STATE
  copy:
      content: "{{ bgp.output.data | to_nice_json }}"
      dest: output/cisco-bgp-{{ inventory_hostname }}.json
  tags:
      - cisco-bgp

- name: TEMP // COLLECT CISCO VRF CONFIG AND STATE
  netconf_get:
      filter: <vrfs xmlns="http://cisco.com/ns/yang/Cisco-IOS-XR-infra-rsi-cfg"/>
      display: json
  register: vrf
  tags:
      - cisco-vrf

- name: TEMP // SAVE CISCO VRF CONFIG AND STATE
  copy:
      content: "{{ vrf.output.data | to_nice_json }}"
      dest: output/cisco-vrf-{{ inventory_hostname }}.json
  tags:
      - cisco-vrf

- name: TEMP // COLLECT NOKIA NATIVE CONFIG AND STATE
  netconf_get:
      filter: <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf"/>
      display: json
  register: nokia_native
  tags:
      - nokia-conf

- name: TEMP // SAVE NOKIA NATIVE CONFIG AND STATE
  copy:
      content: "{{ nokia_native.output.data | to_nice_json }}"
      dest: output/nokia-conf-{{ inventory_hostname }}.json
  tags:
      - nokia-conf
...
