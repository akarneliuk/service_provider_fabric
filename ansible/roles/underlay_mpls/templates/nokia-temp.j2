    /edit-config global
{% for iface in interfaces %}
{% if 'system' in iface.name %}
    /configure router "Base" router-id {{ iface.ipv4.address }}
{% else %}
    /configure port {{ iface.name }} admin-state enable
    /configure port {{ iface.name }} ethernet mode network
    /configure port {{ iface.name }} ethernet encap-type dot1q
    /configure port {{ iface.name }} ethernet single-fiber true
    /configure router "Base" interface "noc_{{ iface.name }}" port {{ iface.name }}:0
{% endif %}
{% if iface.ipv4 is defined %}{# 001: configuration of IPv4 addresses #}
    /configure router "Base" interface "{% if 'system' in iface.name %}{{ iface.name }}{% else %}noc_{{ iface.name }}{% endif %}" ipv4 primary address {{ iface.ipv4.address }}
    /configure router "Base" interface "{% if 'system' in iface.name %}{{ iface.name }}{% else %}noc_{{ iface.name }}{% endif %}" ipv4 primary prefix-length {{ iface.ipv4.prefix }}
{% endif %}{# 001: configuration of IPv4 addresses #}
{% if iface.ipv6 is defined %}{# 002: configuration of IPv6 addresses #}
    /configure router "Base" interface "{% if 'system' in iface.name %}{{ iface.name }}{% else %}noc_{{ iface.name }}{% endif %}" ipv6 address {{ iface.ipv6.address }} prefix-length {{ iface.ipv6.prefix }}
{% endif %}{# 002: configuration of IPv6 addresses #}
{% endfor %}
{% if platform_defaults.mpls_label_ranges is defined %}{# 003: in case Segment Routing presents configure labels #}
{% for mpls_block in platform_defaults.mpls_label_ranges %}
{% if mpls_block.id == 'sr' %}{# 003: updating MPLS label ranges if necessary #}
    /configure router "Base" mpls-labels sr-labels start {{ mpls_block.start }}
    /configure router "Base" mpls-labels sr-labels end {{ mpls_block.end }}
{% endif %}{# 004: in case Segment Routing presents, configure labels #}
{% endfor %}
{% endif %}{# 003: updating MPLS label ranges if necessary #}
{% for routing_protocol in routing %}
{% if routing_protocol.id == 'ISIS' %}{# 005: configuration of ISIS routing protocol #}
    /configure router "Base" isis {{ routing_protocol.tag }} admin-state enable
    /configure router "Base" isis {{ routing_protocol.tag }} advertise-router-capability as
{% if routing_protocol.is_type == 'LEVEL_2' %}{# 006: limiting level cabaility if needed #}
    /configure router "Base" isis {{ routing_protocol.tag }} level-capability 2
    /configure router "Base" isis {{ routing_protocol.tag }} level 2 wide-metrics-only true
{% elif routing_protocol.is_type == 'LEVEL_1' %}{# 006: limiting level cabaility if needed #}
    /configure router "Base" isis {{ routing_protocol.tag }} level-capability 1
    /configure router "Base" isis {{ routing_protocol.tag }} level 1 wide-metrics-only true
{% endif %}{# 006: limiting level cabaility if needed #}
    /configure router "Base" isis {{ routing_protocol.tag }} area-address [{{ routing_protocol.area_id }}]
{% for afi_safi in routing_protocol.af %}
{% if afi_safi.afi == 'IPV6' %}{# 008: enabling IPV6 multi-topology #}
    /configure router "Base" isis {{ routing_protocol.tag }} multi-topology ipv6-unicast true
    /configure router "Base" isis {{ routing_protocol.tag }} ipv6-routing mt
{% endif %}{# 008: enabling IPV6 multi-topology #}
{% endfor %}
{% if mpls is defined %}{# 007: enabling segment routing #}
    /configure router "Base" isis {{ routing_protocol.tag }} segment-routing admin-state enable
    /configure router "Base" isis {{ routing_protocol.tag }} segment-routing tunnel-table-pref 8
    /configure router "Base" isis {{ routing_protocol.tag }} segment-routing prefix-sid-range global
{% for r_iface in routing_protocol.interfaces %}
    /configure router "Base" isis {{ routing_protocol.tag }} interface "{% if 'system' in r_iface.name %}system{% else %}noc_{{ r_iface.name }}{% endif %}" passive {% if r_iface.passive %}true{% else %}false{% endif %}

{% if r_iface.type is defined %}
    /configure router "Base" isis {{ routing_protocol.tag }} interface "{% if 'system' in r_iface.name %}system{% else %}noc_{{ r_iface.name }}{% endif %}" interface-type point-to-point
{% endif %}
{% if r_iface.segment_routing is defined %}
    /configure router "Base" isis {{ routing_protocol.tag }} interface "{% if 'system' in r_iface.name %}system{% else %}noc_{{ r_iface.name }}{% endif %}" ipv4-node-sid {{ r_iface.segment_routing.id_type }} {{ r_iface.segment_routing.id_value }}
{% endif %}
{% endfor %}
{% endif %}{# 007: enabling segment routing #}
{% endif %}{# 005: configuration of ISIS routing protocol #}
{% endfor %}
    /commit
    /quit-config
