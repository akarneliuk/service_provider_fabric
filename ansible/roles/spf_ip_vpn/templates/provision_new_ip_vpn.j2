{% for customer_site in l3vpn_svc.sites.site %}{# f-001: looping all customer sites in service request #}
{% for customer_connection in customer_site.site_network_accesses.site_network_access %}{# f-002: looping all customer connections on site #}
{% for sp_pop_site in pe_to_location %}{# f-003: looping all SP sites with PEs #}
{% if sp_pop_site.location_id == customer_connection.location_reference and sp_pop_site.pe_id == inventory_hostname %}{# i-001: defining PE hostname based on location-id in ietf-l3vpn-svc request #}
        - vpn_id: {{ customer_connection.vpn_attachment.vpn_id }}
{% for vpn_service in l3vpn_svc.vpn_services.vpn_service %}{# f-005: looping all VPN services within ietf-l3vpn-svc request #}
{% if vpn_service.vpn_id == customer_connection.vpn_attachment.vpn_id %}{# i-003: looking for match between connection and VPN service #}
          customer_name: {{ vpn_service.customer_name }}
{% endif %}{# i-003: looking for match between connection and VPN service #}
{% endfor %}{# f-005: looping all VPN services within ietf-l3vpn-svc request #}
{% for routing_protocol in routing %}{# f-004: looping routing protocols configuration from underlay #}
{% if routing_protocol.id == 'BGP' %}{# i-002: looking for BGP config #}
          route_distinguisher: {{ routing_protocol.asn }}:{{ l3vpn_defaults.route_distinguisher.start + l3vpn_index_next_free }}
          route_target: {{ routing_protocol.asn }}:{{ l3vpn_defaults.route_distinguisher.start + l3vpn_index_next_free }}
{% endif %}{# i-002: looking for BGP config #}
{% endfor %}{# f-004: looping routing protocols configuration from underlay #}
{% endif %}{# i-001: defining PE hostname based on location-id in ietf-l3vpn-svc request #}
{% endfor %}{# f-003: looping all SP sites with PEs #}
{% endfor %}{# f-002: looping all customer connections on site #}
{% endfor %}{# f-001: looping all customer sites in service request #}

